name: Monitor OVN Releases

on:
  schedule:
    # Check for new OVN releases every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  check-releases:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get latest OVN tag
        id: ovn-release
        run: |
          # Get the latest tag from OVN repository (OVN uses tags, not releases)
          echo "Fetching latest OVN tag..."
          LATEST=$(curl -s https://api.github.com/repos/ovn-org/ovn/tags | jq -r '.[0].name // empty')
          
          if [ -z "$LATEST" ] || [ "$LATEST" = "null" ]; then
            echo "ERROR: Could not determine latest OVN tag"
            exit 1
          fi
          
          VERSION=${LATEST#v}
          echo "latest_version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Latest OVN version: ${VERSION}"

      - name: Check if already built
        id: check-built
        run: |
          VERSION="${{ steps.ovn-release.outputs.latest_version }}"
          
          # Check if we already have a release for this version
          if gh release view "v${VERSION}" >/dev/null 2>&1; then
            echo "already_built=true" >> $GITHUB_OUTPUT
            echo "Version ${VERSION} already built"
          else
            echo "already_built=false" >> $GITHUB_OUTPUT
            echo "Version ${VERSION} needs to be built"
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Trigger build
        if: steps.check-built.outputs.already_built == 'false'
        run: |
          VERSION="${{ steps.ovn-release.outputs.latest_version }}"
          echo "Triggering build for OVN version ${VERSION}"
          
          # Trigger the build workflow via repository dispatch
          curl -X POST \
            -H "Authorization: token ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d "{\"event_type\":\"ovn-release\",\"client_payload\":{\"version\":\"${VERSION}\"}}"

      - name: No build needed
        if: steps.check-built.outputs.already_built == 'true'
        run: |
          echo "OVN version ${{ steps.ovn-release.outputs.latest_version }} already built - skipping"
